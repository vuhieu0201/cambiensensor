import serial
import time
import numpy as np
import matplotlib.pyplot as plt

# ==== C·∫•u h√¨nh ====
PORT = 'COM17'
BAUD = 9600
GROUND_TRUTH = 10.0  # kho·∫£ng c√°ch th·ª±c t·∫ø (cm)
NUM_SAMPLES = 100

raw_values = []
timestamps = []

ser = serial.Serial(PORT, BAUD, timeout=1)
time.sleep(2)

print("üì° ƒêang thu d·ªØ li·ªáu ƒëo...\n")

start_time = time.time()
while len(raw_values) < NUM_SAMPLES:
    line = ser.readline().decode(errors='ignore').strip()
    timestamp = time.time() - start_time
    if "Raw" in line:
        try:
            raw = float(line.split(':')[1].strip().replace("cm", ""))
            raw_values.append(raw)
            timestamps.append(timestamp)

            if len(timestamps) >= 2:
                dt = (timestamps[-1] - timestamps[-2]) * 1000  # ms
                print(f"üü† Raw: {raw:.2f} | Œît Raw: {dt:.1f} ms")
        except:
            continue
ser.close()

# ==== Ph√¢n t√≠ch d·ªØ li·ªáu ====
raw_np = np.array(raw_values)
timestamps_np = np.array(timestamps)

# Sai s·ªë trung b√¨nh (%)
raw_error = np.abs(raw_np - GROUND_TRUTH) / GROUND_TRUTH * 100


# ==== K·∫øt qu·∫£ ====
print("\n=== PH√ÇN T√çCH ===")
print(f"S·ªë m·∫´u thu ƒë∆∞·ª£c: {len(raw_values)}")
print(f"Sai s·ªë trung b√¨nh Raw: {np.mean(raw_error):.2f}%")

# ==== V·∫Ω bi·ªÉu ƒë·ªì ====
plt.figure(figsize=(10, 5))
plt.plot(raw_np, label='Raw', linestyle='--', color='red')
plt.axhline(GROUND_TRUTH, color='green', linestyle=':', label='Ground Truth')
plt.xlabel('Ch·ªâ s·ªë m·∫´u')
plt.ylabel('Kho·∫£ng c√°ch (cm)')
plt.title('D·ªØ li·ªáu Raw c·∫£m bi·∫øn si√™u √¢m')
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
